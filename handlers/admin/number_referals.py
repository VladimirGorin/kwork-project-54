from aiogram import Router
from aiogram.types import Message
from aiogram.fsm.context import FSMContext
from filters import ButtonFilter, StateFilter
from states import AdminState
from database import get_param, update_param
from utils import get_menu
from .commons import back_menu

router = Router()
param_code = 'needed_number_of_referrals'


@router.message(ButtonFilter('üî¢ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤'))
async def handler(message: Message, state: FSMContext):
    current_value = await get_param(param_code)
    text = (f'<b>{message.text}</b>\n\n'
            f'–¢–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: {current_value}\n\n'
            f'–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –ù–∞–∑–∞–¥:')
    menu = get_menu(back_menu)
    await message.answer(text, reply_markup=menu)
    await state.set_state(AdminState.WaitingNumberReferals)


@router.message(StateFilter(AdminState.WaitingNumberReferals))
async def handler(message: Message):
    value = message.text
    menu = get_menu(back_menu)
    if value.isdigit():
        await update_param(param_code, value)
        text = (f'<b>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤</b>\n\n'
                f'–¢–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: {value}\n\n'
                f'–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –ù–∞–∑–∞–¥:')
    else:
        text = "–û—à–∏–±–∫–∞ –≤–≤–æ–¥–∞ - –æ–∂–∏–¥–∞–ª–æ—Å—å —á–∏—Å–ª–æ."
    await message.answer(text, reply_markup=menu)
